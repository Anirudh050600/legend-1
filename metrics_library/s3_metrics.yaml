Datasource: Cloudwatch
Reference: https://aws.amazon.com/s3/
Description: Provide a reliable solution for object level storage
data:
  - BucketName
  - FilterId
Panels:
  - Title: (R) Request Count - Write
    Type: Graph
    Description: TODO
    Targets: 
    - dimensions: {"BucketName": {{ data.BucketName }} ,"FilterId": {{ data.FilterId }}}
      metric: PutRequests
      namespace: AWS/S3
      statistic: Sum
      alias: '{{ '{{metric}}' }}'
    - dimensions: {"BucketName": {{ data.BucketName }} ,"FilterId": {{ data.FilterId }}}
      metric: PostRequests
      namespace: AWS/S3
      statistic: Sum
      alias: '{{ '{{metric}}' }}'
    AlertConfig:
      Priority: P1
      Message: 'Request Count - Write take actions like this 1. 2.'
      Rule:
        forDuration: 2m
        evaluateEvery: 10s
      Conditions:
        - evaluatorParams: 2
          evaluatorType: gt
          operatorType: and
          queryRefId: A # it is according to sequence
          queryTimeEnd: now
          queryTimeStart: 5m
          reducerParams: []
          reducerType: avg
        - evaluatorParams: 2
          evaluatorType: gt
          operatorType: and
          queryRefId: B # it is according to sequence
          queryTimeEnd: now
          queryTimeStart: 5m
          reducerParams: []
          reducerType: avg

  - Title: (R) Request Count - Read
    Type: Graph
    Description: TODO
    Targets:
    - dimensions: {"BucketName": {{ data.BucketName }} ,"FilterId": {{ data.FilterId }}}
      metric: GetRequests
      namespace: AWS/S3
      statistic: Sum
      alias: '{{ '{{metric}}' }}'
      refId: A
